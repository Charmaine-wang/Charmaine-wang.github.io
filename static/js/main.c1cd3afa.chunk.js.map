{"version":3,"sources":["components/Blob/index.js","components/BlendMode/index.js","pages/FrontSection/index.js","pages/SecondSection/index.js","components/Modal/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledCircle","styled","circle","Blob","props","useRef","useEffect","moveMe","current","getRandomIntBetween","from","to","Math","floor","random","target","TweenLite","x","y","onComplete","onCompleteParams","ref","cx","window","innerWidth","cy","innerHeight","r","fill","StyledBlendMode","svg","StyledBlobs","BlendMode","Array","map","index","id","type","values","result","tableValues","StyledFrontSection","section","isActive","FrontSection","StyledSecondSection","div","SecondSection","href","StyledModal","Modal","StyledWrapper","App","useState","isClicked","setClicked","className","onClick","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qXAKA,IAAMA,EAAeC,IAAOC,OAAV,KA0BHC,EApBF,SAACC,GACV,IAAMF,EAASG,iBAAO,MAGtBC,qBAAU,WACNC,EAAOL,EAAOM,WACf,IAEH,IAAMC,EAAsB,SAACC,EAAMC,GAC/B,OAAQC,KAAKC,MAAMD,KAAKE,UAAaH,EAAK,EAAKD,IAASA,GAGtDH,EAAS,SAATA,EAAUQ,GACZC,IAAUL,GAAGI,EAAwB,EAAhBH,KAAKE,SAAc,CAAEG,EAAmB,IAAhBL,KAAKE,SAAgBI,EAAmB,IAAhBN,KAAKE,SAAgBK,WAAYZ,EAAQa,iBAAkB,CAACL,MAErI,OACI,kBAACf,EAAD,CAAcqB,IAAKnB,EAAQoB,GAAIb,EAAoB,EAAGc,OAAOC,WAAa,GAAIC,GAAIhB,EAAoB,EAAGc,OAAOG,YAAc,GAAIC,EAAGlB,EAAoB,GAAI,KAAMmB,KAAK,W,+TCrBhL,IAAMC,EAAkB5B,IAAO6B,IAAV,KAOfC,EAAc9B,IAAO6B,IAAV,KA6BFE,EArBG,WAEd,OACI,oCACA,kBAACH,EAAD,KACI,kBAACE,EAAD,KACC,YAAI,IAAIE,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAW,kBAAC,EAAD,UAEnC,4BAAQC,GAAG,wBACP,mCAAeC,KAAK,WAAWC,OAAO,IAAIC,OAAO,UACjD,6CACA,6BAASF,KAAK,WAAWG,YAAY,wCACrC,6BAASH,KAAK,WAAWG,YAAY,wCACrC,6BAASH,KAAK,WAAWG,YAAY,6C,2bC9BrD,IAAMC,EAAqBxC,IAAOyC,QAAV,KAgBL,SAAAtC,GAAK,OAAKA,EAAMuC,SAAW,OAAS,WAiBxCC,EAXM,SAACxC,GAElB,OACA,kBAACqC,EAAuBrC,EACpB,8CACA,kBAAC,EAAD,Q,iaC5BR,IAAMyC,EAAsB5C,IAAO6C,IAAV,KAkCVC,EAdO,WAClB,OACA,kBAACF,EAAD,KACI,uBAAGG,KAAK,kDAAiD,8CACzD,uBAAGA,KAAK,8CAA6C,0CACrD,uBAAGA,KAAK,6CAA4C,4CACpD,uBAAGA,KAAK,kDAAiD,qCACzD,uBAAGA,KAAK,8CAA6C,2CACrD,uBAAGA,KAAK,+CAA8C,iDACtD,uBAAGA,KAAK,6CAA4C,2C,yhBC7B5D,IAAMC,EAAchD,IAAO6C,IAAV,KACL,SAAC1C,GAAD,OAAYA,EAAMuC,SAAW,OAAS,UA6EnCO,EAvBD,SAAC9C,GACd,OACC,kBAAC6C,EAAgB7C,EAEhB,yG,4ZCvDH,IAAM+C,EAAgBlD,IAAO6C,IAAV,KAmCJM,MAff,WAAgB,IAAD,EACkBC,oBAAS,GAD3B,mBACPC,EADO,KACIC,EADJ,KAGd,OACC,yBAAKC,UAAU,OACd,kBAACL,EAAD,CAAeM,QAAS,kBAAMF,GAAYD,KACzC,8CAED,kBAAC,EAAD,CAAOX,SAAUW,IACjB,kBAAC,EAAD,CAAcX,SAAUW,IACxB,kBAAC,EAAD,QCzBiBI,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c1cd3afa.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { TweenLite } from \"gsap\";\n\nimport styled from 'styled-components';\n\nconst StyledCircle = styled.circle`\n    /* background: black; */\n\n`;\n\n\nconst Blob = (props) => {\n    const circle = useRef(null);\n\n\n    useEffect(() => {\n        moveMe(circle.current);\n    }, []);\n\n    const getRandomIntBetween = (from, to) => {\n        return (Math.floor(Math.random() * ((to + 1) - from)) + from)\n    }\n\n    const moveMe = (target) => {\n        TweenLite.to(target, Math.random() * 6, { x: Math.random() * 300, y: Math.random() * 300, onComplete: moveMe, onCompleteParams: [target] })\n    }\n    return (\n        <StyledCircle ref={circle} cx={getRandomIntBetween(0, window.innerWidth / 2)} cy={getRandomIntBetween(0, window.innerHeight / 2)} r={getRandomIntBetween(25, 100)} fill=\"black\" />\n\n    )\n}\nexport default Blob\n","import React, { useState, useEffect, useRef } from 'react';\nimport { TweenMax, TweenLite } from \"gsap\";\nimport Blob from '../Blob';\n\nimport styled from 'styled-components';\n\nconst StyledBlendMode = styled.svg`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background: white;\n    filter:blur(5px) contrast(100);\n`;\nconst StyledBlobs = styled.svg`\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n`;\n\n\nconst BlendMode = () => {\n\n    return (\n        <>\n        <StyledBlendMode>\n            <StyledBlobs>\n            {[...new Array(40)].map((index) => <Blob />)}\n            </StyledBlobs>\n            <filter id=\"high-contrast-filter\">\n                <feColorMatrix type=\"saturate\" values=\"0\" result=\"desat\"/>\n                <feComponentTransfer>\n                <feFuncR type=\"discrete\" tableValues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 .8 .9 1\" />\n                <feFuncG type=\"discrete\" tableValues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 .8 .9 1\" />\n                <feFuncB type=\"discrete\" tableValues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 .8 .9 1\" />\n                </feComponentTransfer>\n            </filter>\n        </StyledBlendMode>\n        </>\n    );\n};\n\nexport default BlendMode;","import React, { useState } from 'react';\nimport BlendMode from '../../components/BlendMode'\nimport styled from 'styled-components';\n\nconst StyledFrontSection = styled.section`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    height: 100vh;\n    width: 100vw;\n    margin-bottom: 0;\n\n    h1 {\n        mix-blend-mode: difference;\n        position: absolute;\n        top: 100px;\n        color: #fff;\n        z-index:111;\n        font-size: 126px;\n        line-height: 60px;\n        display: ${props => (props.isActive ? \"none\" : \"block\")};\n    }\n`;\n\n\n\nconst FrontSection = (props) => {\n    // const [isClicked, setClicked] = useState(false);\n    return (\n    <StyledFrontSection {...props}>\n        <h1>Charmaine Wang</h1>\n        <BlendMode />\n      \n    </StyledFrontSection>\n    );\n};\n\nexport default FrontSection;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSecondSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    height: 100vh;\n    width: 100vw;\n    margin-bottom: 0;\n    background-color: #0000ff;\n      a {\n        text-decoration: none;\n      }\n\n      h1 {\n        font-size: 96px;\n        margin: 0;\n        /* color: #0000FF; */\n        color: #fff\n      }\n`;\n\nconst SecondSection = () => {\n    return (\n    <StyledSecondSection>\n        <a href=\"https://github.com/Charmaine-wang/Fuzzy-memory\"><h1>Fuzzy Memory.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/photoify\"><h1>Photoify.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/webshop\"><h1>E Commerce.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/SGN-frontend\"><h1>Sgn.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/gameover\"><h1>Game Over.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/klearning\"><h1>Kultur Akademin.</h1></a>\n        <a href=\"https://github.com/Charmaine-wang/workout\"><h1>Workout.</h1></a>\n    </StyledSecondSection>\n    );\n};\n\nexport default SecondSection;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledModal = styled.div`\n\tdisplay: ${(props) => (props.isActive ? 'flex' : 'none')};\n\twidth: 90vw;\n\theight: 90vh;\n\ttransform: translateX(5.5%);\n\tposition: fixed;\n\tz-index: 2;\n\ttop: 5%;\n\tflex-direction: column;\n\tbackground: #0000ff;\n\tanimation: fade-in 0.2s ease-in-out;\n\n\th2 {\n\t\tfont-size: 96px;\n\t\tmargin: 0;\n\t\tcolor: #fff;\n\t}\n\n\tp {\n\t\tfont-size: 46px;\n\t\tmargin: 0;\n\t\tcolor: #fff;\n\t}\n\n\t@keyframes fade-in {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\n// const StyledSecondtSection = styled.section`\n//     display: flex;\n//     flex-direction: row;\n//     align-items: center;\n//     justify-content: center;\n//     height: 100vh;\n//     width: 100vw;\n//     margin-bottom: 0;\n//       div {\n//         text-align: left;\n//       }\n//       a {\n//         text-decoration: none;\n//       }\n\n//       h1 {\n//         font-size: 86px;\n//         margin: 0;\n//         color: #fff;\n//       }\n// `;\nconst Modal = (props) => {\n\treturn (\n\t\t<StyledModal {...props}>\n\t\t\t{/* <h2>About</h2> */}\n\t\t\t<p>\n\t\t\t\tMy name is Charmaine. Web developer studying at Yrgo Gothenburg, Sweden.\n\t\t\t</p>\n\t\t\t{/* <StyledSecondtSection>\n          <div>\n            <a href=\"https://github.com/Charmaine-wang/SGN-frontend\"><h1>Sgn.</h1></a>\n            <a href=\"https://github.com/Charmaine-wang/workout\"><h1>Workout.</h1></a>\n            <a href=\"https://github.com/Charmaine-wang/photoify\"><h1>Photoify.</h1></a>\n            <a href=\"https://github.com/Charmaine-wang/webshop\"><h1>E Commerce.</h1></a>\n          </div>\n          <div>\n            <a href=\"https://github.com/Charmaine-wang/gameover\"><h1>Game Over.</h1></a>\n            <a href=\"https://github.com/Charmaine-wang/Fuzzy-memory\"><h1>Fuzzy Memory.</h1></a>\n            <a href=\"https://github.com/Charmaine-wang/klearning\"><h1>Kultur Akademin.</h1></a>\n          </div>\n        </StyledSecondtSection> */}\n\t\t</StyledModal>\n\t);\n};\nexport default Modal;\n","import React, { useState } from 'react';\nimport FrontSection from './pages/FrontSection';\nimport SecondSection from './pages/SecondSection';\nimport Modal from './components/Modal';\nimport './App.css';\nimport styled from 'styled-components';\n\nconst StyledWrapper = styled.div`\n\ttop: 100%;\n\tz-index: 999;\n\tright: 0;\n\tmargin: 0 10px;\n\t/* justify-content: center; */\n\tposition: fixed;\n\ttext-align: center;\n\ttransform: rotate(90deg);\n\twhite-space: nowrap;\n\th3 {\n\t\tpadding: 2px 4px;\n\t\tmargin: 0;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tbackground-color: #0000ff;\n\t\tcolor: #fff;\n\t}\n`;\n\nfunction App() {\n\tconst [isClicked, setClicked] = useState(false);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<StyledWrapper onClick={() => setClicked(!isClicked)}>\n\t\t\t\t<h3>Web developer</h3>\n\t\t\t</StyledWrapper>\n\t\t\t<Modal isActive={isClicked} />\n\t\t\t<FrontSection isActive={isClicked} />\n\t\t\t<SecondSection />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}